import { Card, CardContent, Typography, Box, Divider } from '@mui/material';
import { useNavigate } from 'react-router-dom';
import React, { useRef, useState, useEffect } from 'react';
import './AccountInfoPage.css';
import Keypad from '../../components/Keypad';
import BottomModal from '../../components/modal/BottomModal';
import Button from '../../components/button/Button';
import PwdModal6 from '../../components/modal/PwdModal6';
import AlertModal from '../../components/modal/AlertModal';
import axios from 'axios';
// import api from '../../utils/api'; // api Ïù∏ÌÑ∞ÏÖâÌÑ∞((Î™®Îì† ÏöîÏ≤≠Ïóê ÏûêÎèôÏúºÎ°ú ÌÜ†ÌÅ∞ Ï∂îÍ∞Ä))

// Í≥ÑÏ¢å Ï†ïÎ≥¥ ÌéòÏù¥ÏßÄ
const AccountInfoPage = ({ apiData }) => {
    // „Ñ¥ apiDataÏóêÎäî accountDTO?  Îì§Ïñ¥ÏûàÏùå
    const accountDTO = apiData?.accountDTO;

    const navigate = useNavigate(); // useNavigate ÌõÖ ÏÇ¨Ïö©
    const [amount, setAmount] = useState(''); // ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω Í∏àÏï° Ï†ÄÏû•

    // üü¢ Î™®Îã¨ Ï∞∏Ï°∞Ïö© ref ÏÉùÏÑ±
    const paymentAmountModalRef = useRef(); // ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω Î™®Îã¨ ref
    const pwdInputModalRef = useRef(); // ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†• Î™®Îã¨ ref
    const completeModalRef = useRef(); // ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω ÏôÑÎ£å Î™®Îã¨ ref
    const pwdFailAlertRef = useRef(); // ÎπÑÎ∞ÄÎ≤àÌò∏ Î∂àÏùºÏπò Î™®Îã¨ ref
    const failAlertRef2 = useRef(); // Ï†ÅÍ∏àÌï¥ÏßÄ Ïã§Ìå® Î™®Îã¨ ref
    const rangeAlertRef = useRef(); // ÎÇ©ÏûÖÍ∏àÏï° Î≤îÏúÑ Ï†úÏñ¥ Î™®Îã¨

    console.log('Î†åÎçîÎßÅ');
    console.log(
        paymentAmountModalRef,
        pwdInputModalRef,
        completeModalRef,
        pwdFailAlertRef,
        failAlertRef2,
        rangeAlertRef,
    );

    /* ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ìï∏Îì§Îü¨ START*/
    // ÏÑ§Ï†ï > Ïù¥ÏûêÏ°∞Ìöå ÌÅ¥Î¶≠ Ïãú
    const handleInterestClick = () => {
        navigate('/interestMainPage'); // Ïù¥Ïûê Ï°∞Ìöå ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
    };

    // ÏÑ§Ï†ï > Ìï¥ÏßÄ ÌÅ¥Î¶≠ Ïãú
    const handleTerminationClick = () => {
        navigate('/termination'); // Ï§ëÎèÑ Ìï¥ÏßÄ ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
    };
    /* ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ìï∏Îì§Îü¨ END */

    /* Î™®Îã¨ Í¥ÄÎ¶¨ START */
    // ÎÇ©ÏûÖÍ∏àÏï° ÏûÖÎ†• Î™®Îã¨ Open, Close
    const OpenPaymentAmountModalRef = () => {
        if (paymentAmountModalRef.current) {
            paymentAmountModalRef.current.openModal();
        }
    };
    const ClosePaymentAmountModalRef = () => {
        if (paymentAmountModalRef.current) {
            paymentAmountModalRef.current.closeModal();
        }
    };
    // ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†• Î™®Îã¨ Open, Close
    const OpenPwdInputModal = () => {
        if (pwdInputModalRef.current) {
            pwdInputModalRef.current.openModal();
        }
    };
    const ClosePwdInputModal = () => {
        if (pwdInputModalRef.current) {
            pwdInputModalRef.current.closeModal();
        }
    };
    // ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤ΩÏôÑÎ£å Î™®Îã¨ Open, Close
    const OpenCompleteModal = () => {
        if (completeModalRef.current) {
            completeModalRef.current.openModal();
        }
    };
    const CloseCompleteModal = () => {
        if (completeModalRef.current) {
            completeModalRef.current.closeModal(); // Î≥ÄÍ≤ΩÏôÑÎ£å Î™®Îã¨ Îã´Í≥†
            navigate('/manageAccount'); // ÏÉàÎ°úÏö¥ Í≤ΩÎ°úÎ°ú Ïù¥Îèô (Ïñ¥ÎîîÎ°ú Ïù¥ÎèôÌïòÏßÄ)
        }
    };
    // ÎπÑÎ≤à Î∂àÏùºÏπò ÏïåÎ¶º Î™®Îã¨ Open, Close
    const OpenPwdFailAlert = () => {
        console.log('üö® OpenPwdFailAlert Ïã§ÌñâÎê®!');
        console.log(pwdFailAlertRef);
        if (pwdFailAlertRef.current) {
            pwdFailAlertRef.current.openModal();
        } else {
            console.error('pwdFailAlertRefÍ∞Ä ÏïÑÏßÅ Ï¥àÍ∏∞ÌôîÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
        }
    };
    const ClosePwdFailAlert = () => {
        if (pwdFailAlertRef.current) {
            pwdFailAlertRef.current.closeModal();
        }
    };
    // Í∏∞ÌÉÄ Ïò§Î•ò ÏïåÎ¶º Î™®Îã¨ Open, Close
    const OpenFailAlert = () => {
        if (failAlertRef2.current) {
            failAlertRef2.current.openModal();
        }
    };
    const CloseFailAlert = () => {
        if (failAlertRef2.current) {
            failAlertRef2.current.closeModal();
        }
    };
    /* Î™®Îã¨Í¥ÄÎ¶¨ END */

    /* ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω Î™®Îã¨ Î∞è ÌÇ§Ìå®Îìú Í¥ÄÎ†® START */
    // ÌéòÏù¥ÏßÄÍ∞Ä ÏÉàÎ°úÍ≥†Ïπ®ÎêòÍ±∞ÎÇò Ï≤òÏùå Ï†ëÏÜçÌï† ÎïåÎßàÎã§ amountÎ•º Îπà Î¨∏ÏûêÏó¥Î°ú Ï¥àÍ∏∞Ìôî
    useEffect(() => {
        setAmount(''); // sessionStorageÏóêÏÑú Í∞íÏùÑ Í∞ÄÏ†∏Ïò§ÏßÄ ÏïäÍ≥†, Ìï≠ÏÉÅ Îπà Î¨∏ÏûêÏó¥Î°ú Ï¥àÍ∏∞Ìôî
    }, []);

    // ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤ΩÎ™®Îã¨ Î≥ÄÍ≤ΩÏù¥Î≤§Ìä∏
    const handleChange = (e) => {
        const value = e.target.value.replace(/[^0-9]/g, ''); //Ïà´ÏûêÎßå ÌóàÏö©
        setAmount(value); // ÏûÖÎ†•Îêú Í∞íÏùÑ Ï†ÄÏû•
    };

    // ÌÇ§Ìå®Îìú Î≤ÑÌäº ÌÅ¥Î¶≠ Ïãú Ïà´Ïûê Ï∂îÍ∞Ä
    const handleKeypadClick = (num) => {
        setAmount((prev) => (prev + num).slice(0, 5)); // ÏµúÎåÄ 5ÏûêÎ¶¨ÍπåÏßÄÎßå ÏûÖÎ†•
    };

    // ÏûÖÎ†• ÏßÄÏö∞Í∏∞
    const handleKeypadDelete = () => {
        setAmount((prev) => prev.slice(0, -1));
    };
    /* ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω Î™®Îã¨ Î∞è ÌÇ§Ìå®Îìú Í¥ÄÎ†® END */

    /*  ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω ÌîÑÎ°úÏÑ∏Ïä§ START */

    // 1. ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤ΩÎ≤ÑÌäº ÎàåÎ†ÄÏùÑ Í≤ΩÏö∞ Ïù¥Î≤§Ìä∏
    const handleNextPage = async () => {
        const numAmount = Number(amount);

        if (numAmount < 100 || numAmount > 30000) {
            // 100ÎØ∏Îßå or 30000Ï¥àÍ≥º ÏûÖÎ†• Î∂àÍ∞Ä
            rangeAlertRef.current.openModal(); // ÎÇ©ÏûÖÍ∏àÏï° Ïà´Ïûê Î≤îÏúÑ Ï†úÌïú Í≤ΩÍ≥†Ï∞Ω
            return;
        }
        // Î≤îÏúÑÏóê ÎßûÍ≤å ÏûÖÎ†•ÌñàÏùÑ Í≤ΩÏö∞
        setAmount(numAmount);
        ClosePaymentAmountModalRef(); // ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤ΩÎ™®Îã¨ Close
        OpenPwdInputModal(); // ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†•Ï∞Ω open
    };

    // 2. Í∞ÑÌé∏ ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†• ÌõÑ ÌîÑÎ°úÏÑ∏Ïä§
    const inputPwdProcess = async (pwd) => {
        ClosePwdInputModal(); // ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†•Ï∞Ω close
        console.log('ÏûÖÎ†•Îêú pwdÍ∞í!!!!!!!!', pwd); // üî• ÌôïÏù∏Ïö© Î°úÍ∑∏
        const result = await updatePaymentAmountAPI(pwd); // ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω API Ïã§ÌñâÌïòÍ≥† await Í≤∞Í≥º Í∏∞Îã§Î¶¨Í∏∞
        if (result === 1) {
            // ÎπÑÎ∞ÄÎ≤àÌò∏ ÎßûÏúºÎ©¥
            console.log('üö® result === 1 Ïã§ÌñâÎê®!!@!!@!@!@');
            OpenCompleteModal(); // Î≥ÄÍ≤ΩÏôÑÎ£å Î™®Îã¨ open  =>  üö®ÏïåÎ¶ºÏ∞Ω ÏïàÎú∏..
        } else if (result === 401) {
            console.log('üö® OpenPwdFailAlertRef Ïã§ÌñâÎê®!!@!!@!@!@');
            OpenPwdFailAlert(); // ÎπÑÎ≤à Î∂àÏùºÏπò ÏïåÎ¶ºÏ∞Ω open  =>  üö®ÏïåÎ¶ºÏ∞Ω ÏïàÎú∏..
        } else {
            // Í∏∞ÌÉÄ Ïò§Î•ò
            OpenFailAlert(); // Ïã§Ìå® ÏïåÎ¶ºÏ∞Ω open
        }
    };

    // 3. ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω API Ìò∏Ï∂ú
    const updatePaymentAmountAPI = async (pwd) => {
        try {
            // const response = await api.patch(`/account/update/paymentAmount`, {
            //     paymentAmount: amount, // ÏÇ¨Ïö©ÏûêÍ∞Ä ÏûÖÎ†•Ìïú ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤ΩÌï† Í∞í
            //     accountPassword: pwd, // ÏÇ¨Ïö©ÏûêÍ∞Ä ÏûÖÎ†•Ìïú Í∞ÑÌé∏ÎπÑÎ∞ÄÎ≤àÌò∏
            // });
            const token = localStorage.getItem('jwtToken'); // üî• ÌÜ†ÌÅ∞ ÎèôÏ†ÅÏúºÎ°ú Í∞ÄÏ†∏Ïò§Í∏∞
            const response = await // GET ÏöîÏ≤≠
            axios({
                method: 'patch',
                url: '/api/account/update/paymentAmount',
                data: {
                    paymentAmount: amount,
                    accountPassword: pwd,
                },
                headers: {
                    Authorization: `Bearer ${token}`,
                },
            })
                .then((res) => {
                    console.log(res.data);
                    return res;
                })
                .catch((err) => {
                    console.error(err);
                });
            const result = response.data; // Î∞±ÏóîÎìúÏóêÏÑú Î∞òÌôòÎêú Í∞í (1:ÏÑ±Í≥µ, 0:Ïã§Ìå®, 401:ÎπÑÎ∞ÄÎ≤àÌò∏ Î∂àÏùºÏπò)
            console.log('‚úÖ ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω API ÏÑ±Í≥µÍ∞íÏùÄ???:', result); // üî• ÌôïÏù∏Ïö© Î°úÍ∑∏
            return result;
        } catch (error) {
            console.error('‚ùå API ÏöîÏ≤≠ Ïã§Ìå®:', error);
            return 0; // Ïã§Ìå® Ïãú 0Î∞òÌôò
        }
    };
    /*  ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω ÌîÑÎ°úÏÑ∏Ïä§ END */
    // ÎÇ†ÏßúÌòïÏãù Î≥ÄÌôò YYYY-MM-DD
    const formatDate = (date) => {
        if (date != null) return date.substring(0, 10);
    };

    return (
        <>
            <Box sx={{ padding: 0, marginTop: 3 }}>
                <Typography variant="h6" fontWeight="bold">
                    Î¶¨ÌîÑÏ†ÅÍ∏à
                </Typography>
                <Typography variant="body" color="text.secondary">
                    {accountDTO?.accountNumber}
                </Typography>
                <Card
                    variant="outlined"
                    sx={{ borderRadius: 3, margin: 1, padding: 0, marginBottom: 2 }}
                >
                    <CardContent>
                        <Box sx={{ padding: 2, backgroundColor: '#F7F7F7', borderRadius: 3 }}>
                            <Box
                                sx={{
                                    marginBottom: 1,
                                    display: 'flex',
                                    justifyContent: 'space-between',
                                }}
                            >
                                <Typography variant="body" color="text.secondary">
                                    Í∏∞Î≥∏ Í∏àÎ¶¨
                                </Typography>
                                <Typography variant="body">{accountDTO?.interestRate} %</Typography>
                            </Box>
                            <Box
                                sx={{
                                    marginBottom: 1,
                                    display: 'flex',
                                    justifyContent: 'space-between',
                                }}
                            >
                                <Typography variant="body" color="text.secondary">
                                    Í∞úÏÑ§Ïùº
                                </Typography>
                                <Typography variant="body">
                                    {formatDate(accountDTO?.createDate)}
                                </Typography>
                            </Box>
                            <Box
                                sx={{
                                    marginBottom: 1,
                                    display: 'flex',
                                    justifyContent: 'space-between',
                                }}
                            >
                                <Typography variant="body" color="text.secondary">
                                    ÎßåÍ∏∞Ïùº
                                </Typography>
                                <Typography variant="body">
                                    {formatDate(accountDTO?.endDate)}
                                </Typography>
                            </Box>
                            <Box
                                sx={{
                                    marginBottom: 1,
                                    display: 'flex',
                                    justifyContent: 'space-between',
                                }}
                            >
                                <Typography variant="body" color="text.secondary">
                                    ÏûîÏï°
                                </Typography>
                                <Typography variant="body" sx={{ fontWeight: 'bold' }}>
                                    {accountDTO?.balance.toLocaleString()}Ïõê
                                </Typography>
                            </Box>
                            <Box
                                sx={{
                                    display: 'flex',
                                    justifyContent: 'space-between',
                                    marginBottom: 1,
                                }}
                            >
                                <Typography variant="body" color="text.secondary">
                                    Ï†ÅÏö©Í∏àÎ¶¨
                                </Typography>
                                <Box sx={{ textAlign: 'right' }}>
                                    <Typography variant="body2">
                                        Í∏∞Î≥∏Í∏àÎ¶¨ {accountDTO?.interestRate}%
                                    </Typography>
                                    <Typography variant="body2">
                                        Ïö∞ÎåÄÍ∏àÎ¶¨ {accountDTO?.primeRate}%
                                    </Typography>
                                </Box>
                            </Box>
                            <Box
                                sx={{
                                    display: 'flex',
                                    justifyContent: 'space-between',
                                }}
                            >
                                <Typography variant="body" color="text.secondary">
                                    Í≥ºÏÑ∏Íµ¨Î∂Ñ
                                </Typography>
                                <Typography variant="body">
                                    {accountDTO?.taxationYn == 'Y' ? 'ÏùºÎ∞òÍ≥ºÏÑ∏' : 'ÎπÑÍ≥ºÏÑ∏'}
                                </Typography>
                            </Box>
                        </Box>
                    </CardContent>
                </Card>
                {/* Í≥ÑÏ¢å ÏÑ§Ï†ï START */}
                <Typography variant="body" color="text.secondary">
                    ÏÑ§Ï†ï
                </Typography>
                <Card variant="outlined" sx={{ borderRadius: 3, margin: 1, padding: 0 }}>
                    <CardContent>
                        <Box
                            onClick={OpenPaymentAmountModalRef}
                            sx={{
                                marginBottom: 0,
                                display: 'flex',
                                justifyContent: 'space-between',
                            }}
                        >
                            <Typography variant="body" color="text.secondary">
                                ÎÇ©ÏûÖÍ∏àÏï°
                            </Typography>
                            <Typography variant="body">
                                Îß§Ïùº {accountDTO?.paymentAmount.toLocaleString()}Ïõê &gt;
                            </Typography>
                        </Box>
                        <Divider sx={{ marginY: 1, border: 1 }} />
                        <Box
                            onClick={handleInterestClick}
                            sx={{
                                marginBottom: 0,
                                display: 'flex',
                                justifyContent: 'space-between',
                            }}
                        >
                            <Typography variant="body" color="text.secondary">
                                Ïù¥ÏûêÏ°∞Ìöå
                            </Typography>
                            <Typography variant="body">&gt;</Typography>
                        </Box>
                        <Divider sx={{ marginY: 1, border: 1 }} />
                        <Box
                            onClick={handleTerminationClick}
                            sx={{
                                marginBottom: 0,
                                display: 'flex',
                                justifyContent: 'space-between',
                            }}
                        >
                            <Typography variant="body" color="text.secondary">
                                Ìï¥ÏßÄ
                            </Typography>
                            <Typography variant="body">&gt;</Typography>
                        </Box>
                        <Divider sx={{ marginY: 1, border: 1 }} />
                    </CardContent>
                </Card>
                {/* Í≥ÑÏ¢å ÏÑ§Ï†ï END */}
            </Box>
            <>
                {/* Î™®Îã¨Î™®Ïùå */}
                {/* ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤ΩÎ™®Îã¨ START */}
                <BottomModal ref={paymentAmountModalRef}>
                    <Typography variant="body1" className="fw-bold ps-4" sx={{ textAlign: 'left' }}>
                        ÎÇ©ÏûÖÍ∏àÏï°
                    </Typography>
                    <Typography variant="h6" className="fw-bold m-3 ">
                        <div className="paddingBottom">
                            <div className="">
                                <h3>
                                    <input
                                        type="number"
                                        value={amount}
                                        onChange={handleChange}
                                        placeholder={accountDTO?.paymentAmount.toLocaleString()}
                                        className="payment-input"
                                    />
                                    Ïõê
                                </h3>
                            </div>
                            {/* Í∏àÏï° Î≤îÏúÑ ÌëúÏãú */}
                            <Typography
                                variant="body2"
                                color="text.secondary"
                                className="text-center mt-2 mb-5"
                            >
                                100Ïõê ~ 30,000Ïõê
                            </Typography>
                            <div className="pb-5">
                                <Button text={'Î≥ÄÍ≤Ω'} onClick={handleNextPage} />
                            </div>
                        </div>
                        <Keypad onKeyPress={handleKeypadClick} onDelete={handleKeypadDelete} />
                    </Typography>
                </BottomModal>
                {/* ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤ΩÎ™®Îã¨ END */}
                {/* Î≥ÄÍ≤ΩÍ∏àÏï° Î≤îÏúÑÏ†úÌïú ÏïåÎ¶º */}
                <AlertModal ref={rangeAlertRef} text="100ÏõêÎ∂ÄÌÑ∞ 30,000ÏõêÍπåÏßÄ ÏûÖÎ†• Í∞ÄÎä•Ìï©ÎãàÎã§." />
                {/* Í∞ÑÌé∏ ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†• Î™®Îã¨ START */}
                <PwdModal6
                    ref={pwdInputModalRef}
                    onSubmit={(pwd) => {
                        // onSubmitÏóêÏÑú Îß§Í∞úÎ≥ÄÏàòÎ°ú ÏûÖÎ†•Îêú pwdÍ∞Ä ÎÑòÏñ¥Ïò¥
                        inputPwdProcess(pwd);
                    }}
                ></PwdModal6>
                {/* Í∞ÑÌé∏ ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†• Î™®Îã¨ END */}

                {/* ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω ÏôÑÎ£å Î™®Îã¨ START */}
                <BottomModal ref={completeModalRef}>
                    <Typography variant="h6" className="fw-bold mt-3 m-4 ">
                        ÎÇ©ÏûÖ Í∏àÏï°Ïù¥ Î≥ÄÍ≤ΩÎêòÏóàÏäµÎãàÎã§.
                    </Typography>
                    <div className="p-3">
                        <Button
                            text="ÌôïÏù∏"
                            onClick={(e) => {
                                CloseCompleteModal();
                            }}
                        />
                    </div>
                </BottomModal>
                {/* ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω ÏôÑÎ£å Î™®Îã¨ END */}

                {/* ÎπÑÎ∞ÄÎ≤àÌò∏ Î∂àÏùºÏπò Î™®Îã¨ START */}
                <AlertModal
                    ref={pwdFailAlertRef}
                    text={'<span>ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏùºÏπòÌïòÏßÄ ÏïäÏäµÎãàÎã§.<br/>Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.</span> '}
                    onClick={ClosePwdFailAlert}
                />
                {/* ÎπÑÎ∞ÄÎ≤àÌò∏ Î∂àÏùºÏπò Î™®Îã¨ END */}
                {/* ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω Ïã§Ìå® Î™®Îã¨ START */}
                <AlertModal
                    ref={failAlertRef2}
                    text={
                        '<span>ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤ΩÏóê Ïã§Ìå®ÌïòÏòÄÏäµÎãàÎã§.<br/>Í¥ÄÎ¶¨ÏûêÏóêÍ≤å Î¨∏ÏùòÌï¥Ï£ºÏÑ∏Ïöî.</span>'
                    }
                    onClick={CloseFailAlert}
                />
                {/* ÎÇ©ÏûÖÍ∏àÏï° Î≥ÄÍ≤Ω Ïã§Ìå® Î™®Îã¨ END */}
            </>
        </>
    );
};

export default AccountInfoPage;
